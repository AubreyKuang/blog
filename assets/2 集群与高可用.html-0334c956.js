const e=JSON.parse(`{"key":"v-2ea7505a","path":"/cs/database/redis/2%20%E9%9B%86%E7%BE%A4%E4%B8%8E%E9%AB%98%E5%8F%AF%E7%94%A8.html","title":"","lang":"en-US","frontmatter":{"description":"Redis集群与高可用 如何实现服务高可用 从Redis的多服务节点考虑 主从复制 Redis 高可用服务的最基础的保证，实现方案就是将从前的一台 Redis 服务器，同步数据到多台从 Redis 服务器上，即一主多从的模式，且主从服务器之间采用的是**「读写分离」**的方式。 主服务器可以进行读写操作，当发生写操作时自动将写操作同步给从服务器 从服务器一般是只读，并接受主服务器同步过来写操作命令，然后执行这条命令。 主从服务器之间的命令复制是异步进行的。 具体来说，在主从服务器命令传播阶段，主服务器收到新的写命令后，会发送给从服务器。但是，主服务器并不会等到从服务器实际执行完命令后，再把结果返回给客户端，而是主服务器自己在本地执行完命令后，就会向客户端返回结果了。 如果从服务器还没有执行主服务器同步过来的命令，主从服务器间的数据就不一致了。 所以，无法保证主从数据时时刻刻一致，数据不一致是难以避免的。","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/cs/database/redis/2%20%E9%9B%86%E7%BE%A4%E4%B8%8E%E9%AB%98%E5%8F%AF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:description","content":"Redis集群与高可用 如何实现服务高可用 从Redis的多服务节点考虑 主从复制 Redis 高可用服务的最基础的保证，实现方案就是将从前的一台 Redis 服务器，同步数据到多台从 Redis 服务器上，即一主多从的模式，且主从服务器之间采用的是**「读写分离」**的方式。 主服务器可以进行读写操作，当发生写操作时自动将写操作同步给从服务器 从服务器一般是只读，并接受主服务器同步过来写操作命令，然后执行这条命令。 主从服务器之间的命令复制是异步进行的。 具体来说，在主从服务器命令传播阶段，主服务器收到新的写命令后，会发送给从服务器。但是，主服务器并不会等到从服务器实际执行完命令后，再把结果返回给客户端，而是主服务器自己在本地执行完命令后，就会向客户端返回结果了。 如果从服务器还没有执行主服务器同步过来的命令，主从服务器间的数据就不一致了。 所以，无法保证主从数据时时刻刻一致，数据不一致是难以避免的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-26T09:43:18.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-26T09:43:18.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/cs/database/redis/2%20%E9%9B%86%E7%BE%A4%E4%B8%8E%E9%AB%98%E5%8F%AF%E7%94%A8.html"}]]},"headers":[{"level":2,"title":"Redis集群与高可用","slug":"redis集群与高可用","link":"#redis集群与高可用","children":[{"level":3,"title":"如何实现服务高可用","slug":"如何实现服务高可用","link":"#如何实现服务高可用","children":[]},{"level":3,"title":"判断节点是否工作","slug":"判断节点是否工作","link":"#判断节点是否工作","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]}]}],"git":{"createdTime":1682502198000,"updatedTime":1682502198000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":1}]},"readingTime":{"minutes":7.82,"words":2345},"localizedDate":"April 26, 2023","filePathRelative":"cs/database/redis/2 集群与高可用.md","excerpt":"<h2> Redis集群与高可用</h2>\\n<h3> 如何实现服务高可用</h3>\\n<p>从Redis的多服务节点考虑</p>\\n<h4> <strong>主从复制</strong></h4>\\n<p>Redis 高可用服务的最基础的保证，实现方案就是将从前的一台 Redis 服务器，同步数据到多台从 Redis 服务器上，即一主多从的模式，且主从服务器之间采用的是**「读写分离」**的方式。</p>\\n<p>主服务器可以进行读写操作，当发生写操作时自动将写操作同步给从服务器</p>\\n<p>从服务器一般是只读，并接受主服务器同步过来写操作命令，然后执行这条命令。</p>\\n<blockquote>\\n<p>主从服务器之间的命令复制是<strong>异步</strong>进行的。</p>\\n<p>具体来说，在主从服务器命令传播阶段，主服务器收到新的写命令后，会发送给从服务器。但是，主服务器<strong>并不会等到从服务器实际执行</strong>完命令后，再把结果返回给客户端，而是主服务器<strong>自己在本地执行完</strong>命令后，就会向客户端返回结果了。</p>\\n<p>如果从服务器还没有执行主服务器同步过来的命令，主从服务器间的数据就不一致了。</p>\\n<p>所以，无法保证主从数据时时刻刻一致，数据不一致是难以避免的。</p>\\n</blockquote>","autoDesc":true}`);export{e as data};
