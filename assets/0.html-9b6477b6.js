const n=JSON.parse(`{"key":"v-1ed0020e","path":"/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E9%93%BE%E8%A1%A8/0.html","title":"反转链表","lang":"en-US","frontmatter":{"description":"反转链表 反转整个链表 pubic ListNode reverseList(ListNode head) { if (head == null) { return null; } ListNode pre, cur, nxt; pre = null; cur = head; nxt = head; while (cur != null) { nxt = cur.next; cur.next = pre; pre = cur; cur = nxt; } return pre; }","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E9%93%BE%E8%A1%A8/0.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"反转链表"}],["meta",{"property":"og:description","content":"反转链表 反转整个链表 pubic ListNode reverseList(ListNode head) { if (head == null) { return null; } ListNode pre, cur, nxt; pre = null; cur = head; nxt = head; while (cur != null) { nxt = cur.next; cur.next = pre; pre = cur; cur = nxt; } return pre; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-28T04:48:25.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-02-28T04:48:25.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E9%93%BE%E8%A1%A8/0.html"}]]},"headers":[],"git":{"createdTime":1677559705000,"updatedTime":1677559705000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":1}]},"readingTime":{"minutes":0.15,"words":44},"localizedDate":"February 28, 2023","filePathRelative":"algo/📓 总结/📒 链表/0.md","excerpt":"<h1> 反转链表</h1>\\n<p>反转整个链表</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code>pubic <span class=\\"token class-name\\">ListNode</span> <span class=\\"token function\\">reverseList</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ListNode</span> head<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>head <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  \\n  <span class=\\"token class-name\\">ListNode</span> pre<span class=\\"token punctuation\\">,</span> cur<span class=\\"token punctuation\\">,</span> nxt<span class=\\"token punctuation\\">;</span>\\n  pre <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span> cur <span class=\\"token operator\\">=</span> head<span class=\\"token punctuation\\">;</span> nxt <span class=\\"token operator\\">=</span> head<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>cur <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    nxt <span class=\\"token operator\\">=</span> cur<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    cur<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> pre<span class=\\"token punctuation\\">;</span>\\n    pre <span class=\\"token operator\\">=</span> cur<span class=\\"token punctuation\\">;</span>\\n    cur <span class=\\"token operator\\">=</span> nxt<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> pre<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
