const e=JSON.parse(`{"key":"v-3d9d904a","path":"/cs/database/mysql/%F0%9F%93%93%201%20%E4%BA%8B%E5%8A%A1/2.%E7%89%B9%E6%80%A7.html","title":"特性","lang":"en-US","frontmatter":{"description":"特性 事务是由 MySQL 的引擎来实现的，我们常见的 InnoDB 引擎它是支持事务的。 **原子性：**一组操作，不可分割的最小操作单元，要么全部成功、要么全部失败 **一致性：**事务操作前和操作后，数据满足完整性约束，数据库保持一致性状态。 **隔离性：**保持事务在并发的环境中独立运行 **持久性：**一旦提交或回滚，对数据库的改变永久保存 技术保证 持久性是通过 redo log （重做日志）来保证的； 原子性是通过 undo log（回滚日志） 来保证的； 隔离性是通过 MVCC（多版本并发控制） 或锁机制来保证的； 一致性则是通过持久性+原子性+隔离性来保证；","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/cs/database/mysql/%F0%9F%93%93%201%20%E4%BA%8B%E5%8A%A1/2.%E7%89%B9%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"特性"}],["meta",{"property":"og:description","content":"特性 事务是由 MySQL 的引擎来实现的，我们常见的 InnoDB 引擎它是支持事务的。 **原子性：**一组操作，不可分割的最小操作单元，要么全部成功、要么全部失败 **一致性：**事务操作前和操作后，数据满足完整性约束，数据库保持一致性状态。 **隔离性：**保持事务在并发的环境中独立运行 **持久性：**一旦提交或回滚，对数据库的改变永久保存 技术保证 持久性是通过 redo log （重做日志）来保证的； 原子性是通过 undo log（回滚日志） 来保证的； 隔离性是通过 MVCC（多版本并发控制） 或锁机制来保证的； 一致性则是通过持久性+原子性+隔离性来保证；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-06T03:21:04.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-06T03:21:04.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/cs/database/mysql/%F0%9F%93%93%201%20%E4%BA%8B%E5%8A%A1/2.%E7%89%B9%E6%80%A7.html"}]]},"headers":[{"level":2,"title":"技术保证","slug":"技术保证","link":"#技术保证","children":[]}],"git":{"createdTime":1672758980000,"updatedTime":1680751264000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":2}]},"readingTime":{"minutes":0.69,"words":206},"localizedDate":"January 3, 2023","filePathRelative":"cs/database/mysql/📓 1 事务/2.特性.md","excerpt":"<h1> 特性</h1>\\n<p>事务是由 MySQL 的引擎来实现的，我们常见的 InnoDB 引擎它是支持事务的。</p>\\n<p>**原子性：**一组操作，不可分割的最小操作单元，要么全部成功、要么全部失败</p>\\n<p>**一致性：**事务操作前和操作后，数据满足完整性约束，数据库保持一致性状态。</p>\\n<p>**隔离性：**保持事务在并发的环境中独立运行</p>\\n<p>**持久性：**一旦提交或回滚，对数据库的改变永久保存</p>\\n<h2> 技术保证</h2>\\n<ul>\\n<li>持久性是通过 redo log （重做日志）来保证的；</li>\\n<li>原子性是通过 undo log（回滚日志） 来保证的；</li>\\n<li>隔离性是通过 MVCC（多版本并发控制） 或锁机制来保证的；</li>\\n<li>一致性则是通过持久性+原子性+隔离性来保证；</li>\\n</ul>","autoDesc":true}`);export{e as data};
