import{_ as a,V as e,W as n,a0 as s}from"./framework-91a010c2.js";const i={},d=s(`<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><h2 id="mysql体系结构" tabindex="-1"><a class="header-anchor" href="#mysql体系结构" aria-hidden="true">#</a> MySQl体系结构</h2><ul><li>连接层：认证、连接</li><li>服务层：优化、跨存储引擎</li><li>引擎层：索引在此层</li><li>存储层：数据的存储到磁盘中</li></ul><h2 id="存储引擎层" tabindex="-1"><a class="header-anchor" href="#存储引擎层" aria-hidden="true">#</a> 存储引擎层</h2><p>存储数据、建立索引、更新/查询技术的实现</p><p>基于数据库表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 默认存储引擎：InnoDB</span>

<span class="token comment">-- 创建表时，可以指定存储引擎</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
<span class="token punctuation">)</span><span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">INNODB</span><span class="token punctuation">;</span>

<span class="token comment">-- 当前数据库支持的存储引擎</span>
<span class="token keyword">show</span> engines<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="innodb" tabindex="-1"><a class="header-anchor" href="#innodb" aria-hidden="true">#</a> InnoDB</h3><h5 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点：</h5><p>DML操作遵循ACID模型，支持<strong>事务</strong></p><p><strong>行级锁</strong>，提高并发访问性能</p><p>支持<strong>外键</strong>约束</p><h5 id="文件" tabindex="-1"><a class="header-anchor" href="#文件" aria-hidden="true">#</a> 文件：</h5><p>xxx.ibd：xxx代表表名；该文件存储表结构（frm、sdi）、数据和索引</p><p>参数：innodb_file_per_table</p><p><code>show variables like &#39;innodb_file_per_table&#39;</code></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230103162726692.png" alt="image-20230103162726692" loading="lazy"></p><h3 id="myisam" tabindex="-1"><a class="header-anchor" href="#myisam" aria-hidden="true">#</a> MyISAM</h3><p>MySQL早期的默认存储引擎</p><h5 id="特点-1" tabindex="-1"><a class="header-anchor" href="#特点-1" aria-hidden="true">#</a> 特点：</h5><p>不支持事务、不支持外键</p><p>支持表锁、不支持行锁</p><p>访问速度快</p><h5 id="文件-1" tabindex="-1"><a class="header-anchor" href="#文件-1" aria-hidden="true">#</a> 文件：</h5><p>.MYD：存储数据</p><p>.MYI：存储索引</p><p>.sdi：存储表结构信息</p><h3 id="memory" tabindex="-1"><a class="header-anchor" href="#memory" aria-hidden="true">#</a> Memory</h3><p>存储在内存中，考虑到断电等，只能临时用</p><h5 id="特点-2" tabindex="-1"><a class="header-anchor" href="#特点-2" aria-hidden="true">#</a> 特点：</h5><p>内存存放、hash索引</p><h5 id="文件-2" tabindex="-1"><a class="header-anchor" href="#文件-2" aria-hidden="true">#</a> 文件：</h5><p>.sdi：存储表结构信息</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230103163303003.png" alt="image-20230103163303003" loading="lazy"></p><h3 id="选择存储引擎" tabindex="-1"><a class="header-anchor" href="#选择存储引擎" aria-hidden="true">#</a> 选择存储引擎</h3><h5 id="innodb-1" tabindex="-1"><a class="header-anchor" href="#innodb-1" aria-hidden="true">#</a> InnoDB</h5><p>对事务的完整性有较高的要求、并发时要求数据的一致</p><p>除了插入和查询外，还包括很多更新、删除</p><p>（事务、外键）</p><h5 id="myisam-1" tabindex="-1"><a class="header-anchor" href="#myisam-1" aria-hidden="true">#</a> MyISAM</h5><p>操作以读和插入为主，只有少量更新和删除</p><p>对事务完整性、并发要求不高</p><blockquote><p>被NoSQL替代</p><p>存储业务系统的非核心业务</p></blockquote><h5 id="memory-1" tabindex="-1"><a class="header-anchor" href="#memory-1" aria-hidden="true">#</a> MEMORY</h5><p>所有数据保存在内存中，访问快，常用于临时表及缓存</p><p>缺点：对表大小有限制、无法保障数据安全性</p><blockquote><p>被Redis替代</p></blockquote>`,47),r=[d];function h(p,o){return e(),n("div",null,r)}const c=a(i,[["render",h],["__file","1.体系结构.html.vue"]]);export{c as default};
