const e=JSON.parse(`{"key":"v-077e5496","path":"/se/BackEnd/JVM/1%20%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%EF%BD%9C%E5%A4%9A%E7%BA%BF%E7%A8%8B.html","title":"进程线程","lang":"en-US","frontmatter":{"description":"进程线程 进程是程序的一次执行过程，是系统运行程序的基本单位 线程是一个比进程更小的执行单位。一个进程在其执行的过程中可以产生多个线程。与进程不同的是同类的多个线程共享进程的堆和方法区资源，但每个线程有自己的程序计数器、虚拟机栈和本地方法栈，所以系统在产生一个线程，或是在各个线程之间作切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量级进程。 一个进程中可以有多个线程，多个线程共享进程的堆和**方法区 (JDK1.8 之后的元空间)*资源，但是每个线程有自己的*程序计数器、虚拟机栈 和 本地方法栈。","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/se/BackEnd/JVM/1%20%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%EF%BD%9C%E5%A4%9A%E7%BA%BF%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"进程线程"}],["meta",{"property":"og:description","content":"进程线程 进程是程序的一次执行过程，是系统运行程序的基本单位 线程是一个比进程更小的执行单位。一个进程在其执行的过程中可以产生多个线程。与进程不同的是同类的多个线程共享进程的堆和方法区资源，但每个线程有自己的程序计数器、虚拟机栈和本地方法栈，所以系统在产生一个线程，或是在各个线程之间作切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量级进程。 一个进程中可以有多个线程，多个线程共享进程的堆和**方法区 (JDK1.8 之后的元空间)*资源，但是每个线程有自己的*程序计数器、虚拟机栈 和 本地方法栈。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-26T09:43:18.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-26T09:43:18.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/se/BackEnd/JVM/1%20%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%EF%BD%9C%E5%A4%9A%E7%BA%BF%E7%A8%8B.html"}]]},"headers":[{"level":2,"title":"组成部分","slug":"组成部分","link":"#组成部分","children":[{"level":3,"title":"程序计数器","slug":"程序计数器","link":"#程序计数器","children":[]},{"level":3,"title":"虚拟机栈和本地方法栈","slug":"虚拟机栈和本地方法栈","link":"#虚拟机栈和本地方法栈","children":[]},{"level":3,"title":"堆和方法区","slug":"堆和方法区","link":"#堆和方法区","children":[]}]},{"level":2,"title":"同步和异步的区别？","slug":"同步和异步的区别","link":"#同步和异步的区别","children":[]},{"level":2,"title":"多线程","slug":"多线程","link":"#多线程","children":[{"level":3,"title":"意义","slug":"意义","link":"#意义","children":[]},{"level":3,"title":"带来的问题","slug":"带来的问题","link":"#带来的问题","children":[]}]},{"level":2,"title":"线程生命周期","slug":"线程生命周期","link":"#线程生命周期","children":[]},{"level":2,"title":"线程上下文切换","slug":"线程上下文切换","link":"#线程上下文切换","children":[{"level":3,"title":"sleep() & wait()","slug":"sleep-wait","link":"#sleep-wait","children":[]}]},{"level":2,"title":"死锁","slug":"死锁","link":"#死锁","children":[]}],"git":{"createdTime":1682502198000,"updatedTime":1682502198000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":1}]},"readingTime":{"minutes":9.65,"words":2896},"localizedDate":"April 26, 2023","filePathRelative":"se/BackEnd/JVM/1 进程线程｜多线程.md","excerpt":"<h1> 进程线程</h1>\\n<p>进程是程序的一次执行过程，是系统运行程序的基本单位</p>\\n<p>线程是一个比进程更小的执行单位。一个进程在其执行的过程中可以产生多个线程。与进程不同的是同类的多个线程共享进程的<strong>堆</strong>和<strong>方法区</strong>资源，但每个线程有自己的<strong>程序计数器</strong>、<strong>虚拟机栈</strong>和<strong>本地方法栈</strong>，所以系统在产生一个线程，或是在各个线程之间作切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量级进程。</p>\\n<p>一个进程中可以有多个线程，多个线程共享进程的<strong>堆</strong>和**方法区 (JDK1.8 之后的元空间)*<em>资源，但是每个线程有自己的*<em>程序计数器</em></em>、<strong>虚拟机栈</strong> 和 <strong>本地方法栈</strong>。</p>","autoDesc":true}`);export{e as data};
