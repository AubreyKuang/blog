import{_ as a,V as p,W as e,a0 as t}from"./framework-91a010c2.js";const i={},r=t('<h1 id="方法的定义和调用" tabindex="-1"><a class="header-anchor" href="#方法的定义和调用" aria-hidden="true">#</a> 方法的定义和调用</h1><p>方法，用来完成特定功能的代码，类似其他语言的函数</p><p>用于定义类、类的行为特征和功能实现</p><p>方法是类和对象行为特征中的抽象</p><p>如果有返回值：将返回值返回到方法调用处</p><p>如果没有返回值：可以不写return，改成void</p><h5 id="定义格式" tabindex="-1"><a class="header-anchor" href="#定义格式" aria-hidden="true">#</a> 定义格式</h5><p>修饰符public static 方法返回值类型 方法名（形参列表,）{</p><p>Return 返回值;</p><p>}</p><blockquote><p>考虑：</p><p>注意形参列表，定义几个、分别是什么类型</p><p>是否需要返回值</p></blockquote><p>方法名：首字母小写，其余驼峰</p><h5 id="定义带static就能直接调用-否则还要创建这个方法的对象" tabindex="-1"><a class="header-anchor" href="#定义带static就能直接调用-否则还要创建这个方法的对象" aria-hidden="true">#</a> 定义带static就能直接调用，否则还要创建这个方法的对象</h5><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220710154834891.png" alt="image-20220710154834891" loading="lazy"></p><h5 id="调用方法" tabindex="-1"><a class="header-anchor" href="#调用方法" aria-hidden="true">#</a> 调用方法</h5><p>对象名.方法名()</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/3528041659530981_.pic.jpg" alt="3528041659530981_.pic" loading="lazy"></p><p>方法和方法间并列，自己定义的方法不能写到main中</p><blockquote><p>考虑：</p><p>实际参数怎么传入</p><p>方法是否有返回值需要接受</p></blockquote><h5 id="方法重载" tabindex="-1"><a class="header-anchor" href="#方法重载" aria-hidden="true">#</a> 方法重载</h5><p>本质上是不同的方法，只是<strong>名字相同</strong></p><p><strong>形参类型、个数、顺序不同</strong>；只有返回值不同，不构成重载</p><p>顺序：</p><p>![image-20220711221632262](/Users/apple/Library/Application Support/typora-user-images/image-20220711221632262.png)</p><p>根据形参类型，优先走离得近的</p>',25),c=[r];function n(o,s){return p(),e("div",null,c)}const d=a(i,[["render",n],["__file","5 方法的定义和调用.html.vue"]]);export{d as default};
