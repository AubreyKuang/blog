const t=JSON.parse(`{"key":"v-029544bb","path":"/se/BackEnd/%F0%9F%8C%9F%20java%E9%9B%86%E5%90%88/1%20%E5%9F%BA%E7%A1%80/1%20ArrayList.html","title":"ArrayList","lang":"en-US","frontmatter":{"description":"ArrayList 无参构造，长度为0的数组 加了数字，使用制定容量的 如果传入集合，长度为集合大小 扩容 Add自动扩容 &gt;&gt; 1找到一半 + 原来的长度 addAll方法 在自动扩容、增加的长度之间选择较大值 迭代器 failfast｜failsafe fail-fast：一旦发现遍历同时其他修改，抛出异常 ArrayList的模式⬆️","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/se/BackEnd/%F0%9F%8C%9F%20java%E9%9B%86%E5%90%88/1%20%E5%9F%BA%E7%A1%80/1%20ArrayList.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"ArrayList"}],["meta",{"property":"og:description","content":"ArrayList 无参构造，长度为0的数组 加了数字，使用制定容量的 如果传入集合，长度为集合大小 扩容 Add自动扩容 &gt;&gt; 1找到一半 + 原来的长度 addAll方法 在自动扩容、增加的长度之间选择较大值 迭代器 failfast｜failsafe fail-fast：一旦发现遍历同时其他修改，抛出异常 ArrayList的模式⬆️"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-04T03:37:43.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-02-04T03:37:43.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/se/BackEnd/%F0%9F%8C%9F%20java%E9%9B%86%E5%90%88/1%20%E5%9F%BA%E7%A1%80/1%20ArrayList.html"}]]},"headers":[{"level":2,"title":"扩容","slug":"扩容","link":"#扩容","children":[{"level":3,"title":"Add自动扩容","slug":"add自动扩容","link":"#add自动扩容","children":[]},{"level":3,"title":"addAll方法","slug":"addall方法","link":"#addall方法","children":[]}]},{"level":2,"title":"迭代器","slug":"迭代器","link":"#迭代器","children":[{"level":3,"title":"failfast｜failsafe","slug":"failfast-failsafe","link":"#failfast-failsafe","children":[]}]},{"level":2,"title":"和LinkedList比较","slug":"和linkedlist比较","link":"#和linkedlist比较","children":[{"level":3,"title":"Arraylist","slug":"arraylist-1","link":"#arraylist-1","children":[]}]},{"level":2,"title":"CPU读写","slug":"cpu读写","link":"#cpu读写","children":[]}],"git":{"createdTime":1675481863000,"updatedTime":1675481863000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":1}]},"readingTime":{"minutes":0.9,"words":270},"localizedDate":"February 4, 2023","filePathRelative":"se/BackEnd/🌟 java集合/1 基础/1 ArrayList.md","excerpt":"<h1> ArrayList</h1>\\n<p>无参构造，长度为0的数组</p>\\n<p>加了数字，使用制定容量的</p>\\n<p>如果传入集合，长度为集合大小</p>\\n<h2> 扩容</h2>\\n<h3> Add自动扩容</h3>\\n<p>&gt;&gt; 1找到一半 + 原来的长度</p>\\n<h3> addAll方法</h3>\\n<p>在自动扩容、增加的长度之间选择较大值</p>\\n<h2> 迭代器</h2>\\n<h3> failfast｜failsafe</h3>\\n<p>fail-fast：一旦发现遍历同时其他修改，抛出异常</p>\\n<blockquote>\\n<p>ArrayList的模式⬆️</p>\\n</blockquote>","autoDesc":true}`);export{t as data};
