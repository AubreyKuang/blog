import{_ as e,V as a,W as r,a0 as t}from"./framework-91a010c2.js";const h={},i=t('<h1 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h1><h2 id="stringbuilder" tabindex="-1"><a class="header-anchor" href="#stringbuilder" aria-hidden="true">#</a> StringBuilder</h2><p>append</p><h2 id="字符串string" tabindex="-1"><a class="header-anchor" href="#字符串string" aria-hidden="true">#</a> 字符串String</h2><p>.equals</p><p>.charAt</p><blockquote><p>char c = String.charAt(index);</p><p>Character.isDigit(c);</p><p>但是getDigit方法需要自己写</p><p><img src="https://cdn.jsdelivr.net/gh/KoryKL/pictures@main/blog/image-20230306205624670.png" alt="image-20230306205624670" loading="lazy"></p><p>Character.isLetter(c);</p></blockquote><h2 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap" aria-hidden="true">#</a> HashMap</h2><p>put</p><p>Lc 652</p><p>containsKey</p><p>返回boolean是否含有键为xx</p><p>get(root)</p><p>拿到root对应的对象</p><h2 id="hashset" tabindex="-1"><a class="header-anchor" href="#hashset" aria-hidden="true">#</a> HashSet</h2><p>大小 .size();</p><h2 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> List</h2><p>.get()</p><p>.remove()</p><h2 id="queue" tabindex="-1"><a class="header-anchor" href="#queue" aria-hidden="true">#</a> Queue</h2><p>.isEmpty()</p><p>.size()</p><p>进队列：.offer()</p><p>出队列：.poll()</p><h2 id="大小" tabindex="-1"><a class="header-anchor" href="#大小" aria-hidden="true">#</a> 大小</h2><p>数组：.length</p><p>字符串：.length()</p><p>Set：.size()</p>',28),p=[i];function s(n,d){return a(),r("div",null,p)}const o=e(h,[["render",s],["__file","方法.html.vue"]]);export{o as default};
