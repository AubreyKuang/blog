const n=JSON.parse(`{"key":"v-0d7e0a6d","path":"/cs/database/mysql/%F0%9F%93%93%201%20%E4%BA%8B%E5%8A%A1/1.%E6%93%8D%E4%BD%9C.html","title":"基础","lang":"en-US","frontmatter":{"description":"基础 不可分割的操作集合、同时成功或失败 启动 执行了 begin/start transaction 命令后，并不代表事务启动了。只有在执行这个命令后，执行了增删查改操作的 SQL 语句，才是事务真正启动的时机； 执行了 start transaction with consistent snapshot 命令，就会马上启动事务。 事务的操作 方式一：关闭自动提交 #设置手动提交 set @@autocommit = 0; #查询转账人a余额 select * from acount where name = 'a'; #a扣钱 update account set money = money - 1000 where name = 'a'; #b加钱 update account set money = money + 1000 where name = 'b'; #把操作提交到数据库 commit; #如果报错，回滚 rollback;","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/cs/database/mysql/%F0%9F%93%93%201%20%E4%BA%8B%E5%8A%A1/1.%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"基础"}],["meta",{"property":"og:description","content":"基础 不可分割的操作集合、同时成功或失败 启动 执行了 begin/start transaction 命令后，并不代表事务启动了。只有在执行这个命令后，执行了增删查改操作的 SQL 语句，才是事务真正启动的时机； 执行了 start transaction with consistent snapshot 命令，就会马上启动事务。 事务的操作 方式一：关闭自动提交 #设置手动提交 set @@autocommit = 0; #查询转账人a余额 select * from acount where name = 'a'; #a扣钱 update account set money = money - 1000 where name = 'a'; #b加钱 update account set money = money + 1000 where name = 'b'; #把操作提交到数据库 commit; #如果报错，回滚 rollback;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-06T03:21:04.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-06T03:21:04.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/cs/database/mysql/%F0%9F%93%93%201%20%E4%BA%8B%E5%8A%A1/1.%E6%93%8D%E4%BD%9C.html"}]]},"headers":[{"level":3,"title":"启动","slug":"启动","link":"#启动","children":[]},{"level":2,"title":"事务的操作","slug":"事务的操作","link":"#事务的操作","children":[{"level":3,"title":"方式一：关闭自动提交","slug":"方式一-关闭自动提交","link":"#方式一-关闭自动提交","children":[]},{"level":3,"title":"方式二：手动开启事务","slug":"方式二-手动开启事务","link":"#方式二-手动开启事务","children":[]}]}],"git":{"createdTime":1672758980000,"updatedTime":1680751264000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":2}]},"readingTime":{"minutes":0.84,"words":253},"localizedDate":"January 3, 2023","filePathRelative":"cs/database/mysql/📓 1 事务/1.操作.md","excerpt":"<h1> 基础</h1>\\n<p>不可分割的操作集合、同时成功或失败</p>\\n<h3> 启动</h3>\\n<ul>\\n<li>执行了 begin/start transaction 命令后，并不代表事务启动了。只有在执行这个命令后，执行了增删查改操作的 SQL 语句，才是事务真正启动的时机；</li>\\n<li>执行了 start transaction with consistent snapshot 命令，就会马上启动事务。</li>\\n</ul>\\n<h2> 事务的操作</h2>\\n<h3> 方式一：关闭自动提交</h3>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token comment\\">#设置手动提交</span>\\n<span class=\\"token keyword\\">set</span> @<span class=\\"token variable\\">@autocommit</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token comment\\">#查询转账人a余额</span>\\n<span class=\\"token keyword\\">select</span> <span class=\\"token operator\\">*</span> <span class=\\"token keyword\\">from</span> acount <span class=\\"token keyword\\">where</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'a'</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">#a扣钱</span>\\n<span class=\\"token keyword\\">update</span> account <span class=\\"token keyword\\">set</span> money <span class=\\"token operator\\">=</span> money <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1000</span> <span class=\\"token keyword\\">where</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'a'</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">#b加钱</span>\\n<span class=\\"token keyword\\">update</span> account <span class=\\"token keyword\\">set</span> money <span class=\\"token operator\\">=</span> money <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1000</span> <span class=\\"token keyword\\">where</span> name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'b'</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n<span class=\\"token comment\\">#把操作提交到数据库</span>\\n<span class=\\"token keyword\\">commit</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">#如果报错，回滚</span>\\n<span class=\\"token keyword\\">rollback</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
