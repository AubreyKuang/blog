const e=JSON.parse(`{"key":"v-3d2a8268","path":"/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E4%BA%8C%E5%88%86%E6%B3%95/0.html","title":"方法","lang":"en-US","frontmatter":{"description":"方法 默认用途都是递增情况，如果递减，就把大于小于颠倒。 使用 针对目标函数，两边结果相反。一边true，一边false 二分搜索：找到这两段临界的那两个节点，故分类为寻找符合条件的最左侧的，和寻找符合条件的最右侧的这两种情况 在连续的整数区间使用 坐标位置或索引：数组中查找一个元素、隔板插入的空隙 一种资源或者能力：如最小或最大的花费、最大重复的子数组长度","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E4%BA%8C%E5%88%86%E6%B3%95/0.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"方法"}],["meta",{"property":"og:description","content":"方法 默认用途都是递增情况，如果递减，就把大于小于颠倒。 使用 针对目标函数，两边结果相反。一边true，一边false 二分搜索：找到这两段临界的那两个节点，故分类为寻找符合条件的最左侧的，和寻找符合条件的最右侧的这两种情况 在连续的整数区间使用 坐标位置或索引：数组中查找一个元素、隔板插入的空隙 一种资源或者能力：如最小或最大的花费、最大重复的子数组长度"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-12T07:36:31.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-02-12T07:36:31.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E4%BA%8C%E5%88%86%E6%B3%95/0.html"}]]},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"问题列表","slug":"问题列表","link":"#问题列表","children":[]},{"level":2,"title":"排序数组","slug":"排序数组","link":"#排序数组","children":[{"level":3,"title":"1⃣️寻找符合条件的最前的","slug":"_1⃣️寻找符合条件的最前的","link":"#_1⃣️寻找符合条件的最前的","children":[]},{"level":3,"title":"2⃣️寻找符合条件的最后的","slug":"_2⃣️寻找符合条件的最后的","link":"#_2⃣️寻找符合条件的最后的","children":[]},{"level":3,"title":"3⃣️寻找符合条件的浮点数","slug":"_3⃣️寻找符合条件的浮点数","link":"#_3⃣️寻找符合条件的浮点数","children":[]}]},{"level":2,"title":"旋转数组","slug":"旋转数组","link":"#旋转数组","children":[{"level":3,"title":"严格的旋转数组","slug":"严格的旋转数组","link":"#严格的旋转数组","children":[]},{"level":3,"title":"不严格的旋转数组","slug":"不严格的旋转数组","link":"#不严格的旋转数组","children":[]}]},{"level":2,"title":"山脉数组","slug":"山脉数组","link":"#山脉数组","children":[]}],"git":{"createdTime":1675087441000,"updatedTime":1676187391000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":5}]},"readingTime":{"minutes":6.38,"words":1913},"localizedDate":"January 30, 2023","filePathRelative":"algo/📓 总结/📒 二分法/0.md","excerpt":"<h1> 方法</h1>\\n<p>默认用途都是递增情况，如果递减，就把大于小于颠倒。</p>\\n<h2> 使用</h2>\\n<ul>\\n<li>针对目标函数，两边结果相反。一边true，一边false</li>\\n</ul>\\n<blockquote>\\n<p>二分搜索：找到这两段临界的那两个节点，故分类为寻找符合条件的<strong>最左侧</strong>的，和寻找符合条件的<strong>最右侧</strong>的这两种情况</p>\\n</blockquote>\\n<ul>\\n<li>在连续的整数区间使用\\n<ul>\\n<li>坐标位置或索引：数组中查找一个元素、隔板插入的空隙</li>\\n<li>一种资源或者能力：如最小或最大的花费、最大重复的子数组长度</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
