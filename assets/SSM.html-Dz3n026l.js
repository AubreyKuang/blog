import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as n,o as s}from"./app-0rC9aSp6.js";const e={};function t(r,a){return s(),i("div",null,a[0]||(a[0]=[n('<h4 id="ssm-spring-spring-mvc-mybatis" tabindex="-1"><a class="header-anchor" href="#ssm-spring-spring-mvc-mybatis"><span>SSM: Spring + Spring MVC + MyBatis</span></a></h4><p>表现层 springmvc</p><p>⬇️</p><p>业务层 service接口</p><p>⬇️</p><p>持久层 mybatis</p><p>⬇️</p><p>mysql</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230110122809137.png" alt="image-20230110122809137"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-20 14.47.23.png" alt="截屏2022-08-20 14.47.23"></p><h3 id="_1-controller" tabindex="-1"><a class="header-anchor" href="#_1-controller"><span>（1） controller</span></a></h3><p>控制层</p><p>相当于MVC的C层，controller通过service的接口来<strong>控制业务流程</strong>，也可通过接收前端传过来的参数进行业务操作。</p><h3 id="_2-model" tabindex="-1"><a class="header-anchor" href="#_2-model"><span>（2） model</span></a></h3><p>数据模型层</p><p>相当于MVC的M层，<strong>存放实体类</strong>，与数据库中的属性值基本保持一致。</p><h3 id="_3-service" tabindex="-1"><a class="header-anchor" href="#_3-service"><span>（3） service</span></a></h3><p>业务逻辑层</p><p>主要是针对具体的问题的操作，把一些数据层的操作进行组合，间接与数据库打交道（<strong>提供操作数据库的方法</strong>）。</p><p>要做这一层的话，要先设计接口，在实现类。</p><h3 id="_4-mapper" tabindex="-1"><a class="header-anchor" href="#_4-mapper"><span>（4） mapper</span></a></h3><p><strong>数据存储对象</strong></p><p>相当于DAO层，mapper层直接与数据库打交道（执行SQL语句），接口提供给service层。</p><h4 id="联系" tabindex="-1"><a class="header-anchor" href="#联系"><span>联系：</span></a></h4><p>spring在刚开始的时候使用工厂模式（DI）和代理模式（AOP）解耦应用组件进而开发出适用于Web开发的SpringMVC</p><p>在实际开发过程当中会使用到很多样板代码，就开发出了懒人版的SpringBoot</p><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别：</span></a></h4><p>1、springMVC是Spring的一个模式，是一个Web框架，提供了一个轻度耦合的方式来开发Web应用；</p><p>2、SpringBoot是习惯优于配置，降低了项目搭建的难度；</p><p>3、springMVC需要使用到TomCat服务器，SpringBoot内嵌了Tomcat服务器</p><h4 id="spring" tabindex="-1"><a class="header-anchor" href="#spring"><span>Spring</span></a></h4><p>分层的java SE/EE应用full-stack轻量级框架，以反转控制loc、面向切面编程aop为内核</p><p>展现了众多企业级应用技术：展现层、持久层、业务层事务管理</p><p>为开发Java应用程序提供了全面的基础架构支持。它包含一些很好的功能，如依赖注入和开箱即用的模块，如： Spring JDBC 、Spring MVC 、Spring Security、 Spring AOP 、Spring ORM 、Spring Test</p><blockquote><p>在Java Web开发的早期阶段，我们需要编写大量的代码来将记录插入到数据源中</p><p>但是通过使用Spring JDBC模块的JDBCTemplate，我们可以将这操作简化为只需配置几行代码。</p></blockquote><h5 id="开发步骤" tabindex="-1"><a class="header-anchor" href="#开发步骤"><span>开发步骤：</span></a></h5><ol><li><p>导入spring开发的基本包坐标</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220215112411676.png" alt="image-20220215112411676"></p></li><li><p>编写Dao借口和实现类（Bean）</p><blockquote><p>实现习惯放在一个包（Impl）下面</p></blockquote></li><li><p>创建spring核心配置文件</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230110122856473.png" alt="image-20230110122856473"></p><p>在⬆️中配置UserDaolmpl</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220215162023770.png" alt="image-20220215162023770"></p></li><li></li></ol><p>使用spring的API获得bean实例</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220215163226946.png" alt="image-20220215163226946"></p><h4 id="spring-bean" tabindex="-1"><a class="header-anchor" href="#spring-bean"><span>Spring Bean</span></a></h4><p>被实例的，组装的及被Spring 容器管理的Java对象。</p><p>Spring 容器会自动完成@bean对象的实例化。</p><p>创建应用对象之间的协作关系的行为称为：<strong>装配(wiring)</strong>，这就是依赖注入的本质。</p><h4 id="注解开发" tabindex="-1"><a class="header-anchor" href="#注解开发"><span>注解开发</span></a></h4><p>可以简化配置，提高开发效率</p><p>Spring原始注解：取代&lt;Bean&gt;的配置</p><p>讲解：先xml配置，再注解配置</p><p>text/java</p><ol><li><p>在要创建spring的对象中注入</p></li><li><p>在配置文件中加入组件扫描</p><blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">context</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> component</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">scan base</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">=&quot;&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote></li></ol><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220221142033663.png" alt="image-20220221142033663"></p><ol><li><p>按照<strong>数据类型</strong>从spring容器中匹配：@Autowired</p></li><li><p>按照**id值（名称）**从spring容器中匹配：@Autowired @Qualifier (结合auto一起使用)</p></li><li><p>前四个是一组的</p></li><li><p>@Resource 相当于@Auto+@Quali</p></li><li><p>在spring容器中寻找对应的key，赋值给下面的字符串</p></li></ol>',51)]))}const c=p(e,[["render",t]]),h=JSON.parse(`{"path":"/se/BackEnd/SSM.html","title":"","lang":"en-US","frontmatter":{"description":"SSM: Spring + Spring MVC + MyBatis 表现层 springmvc ⬇️ 业务层 service接口 ⬇️ 持久层 mybatis ⬇️ mysql image-20230110122809137 截屏2022-08-20 14.47.23 （1） controller 控制层 相当于MVC的C层，controller通过...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230110122809137.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/%E6%88%AA%E5%B1%8F2022-08-20%2014.47.23.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220215112411676.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230110122856473.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220215162023770.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220215163226946.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220221142033663.png\\"],\\"dateModified\\":\\"2023-04-06T03:21:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aubrey\\",\\"url\\":\\"https://github.com/aubreykuang\\"}]}"],["meta",{"property":"og:url","content":"https://aubreykuang.github.io/blog/blog/se/BackEnd/SSM.html"}],["meta",{"property":"og:site_name","content":"Aubrey's Blog"}],["meta",{"property":"og:description","content":"SSM: Spring + Spring MVC + MyBatis 表现层 springmvc ⬇️ 业务层 service接口 ⬇️ 持久层 mybatis ⬇️ mysql image-20230110122809137 截屏2022-08-20 14.47.23 （1） controller 控制层 相当于MVC的C层，controller通过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230110122809137.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-04-06T03:21:04.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-06T03:21:04.000Z"}]]},"git":{"createdTime":1673189206000,"updatedTime":1680751264000,"contributors":[{"name":"KoryKL","username":"KoryKL","email":"1274994508@qq.com","commits":4,"url":"https://github.com/KoryKL"}]},"readingTime":{"minutes":2.89,"words":868},"filePathRelative":"se/BackEnd/SSM.md","excerpt":"<h4>SSM: Spring + Spring MVC + MyBatis</h4>\\n<p>表现层 springmvc</p>\\n<p>⬇️</p>\\n<p>业务层 service接口</p>\\n<p>⬇️</p>\\n<p>持久层 mybatis</p>\\n<p>⬇️</p>\\n<p>mysql</p>\\n<p><img src=\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230110122809137.png\\" alt=\\"image-20230110122809137\\"></p>\\n<p><img src=\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/截屏2022-08-20 14.47.23.png\\" alt=\\"截屏2022-08-20 14.47.23\\"></p>","autoDesc":true}`);export{c as comp,h as data};
