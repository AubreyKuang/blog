import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o}from"./app-CA3Si4S1.js";const r={};function p(i,e){return o(),a("div",null,e[0]||(e[0]=[n('<h1 id="句子插入题" tabindex="-1"><a class="header-anchor" href="#句子插入题"><span>句子插入题</span></a></h1><h3 id="方式一-指代暗示" tabindex="-1"><a class="header-anchor" href="#方式一-指代暗示"><span>方式一：指代暗示</span></a></h3><p>如果待插入句里面有these, this, They, it等代词，看指代内容是谁，那前一句一定有对应的成分</p><p>对应的方法，同指代题一样，只是反过来应用</p><h3 id="方式二-段落结构暗示" tabindex="-1"><a class="header-anchor" href="#方式二-段落结构暗示"><span>方式二：段落结构暗示</span></a></h3><p>概述-&gt;细节</p><p>概述永远放在细节前，细节永远在概述之后</p><h3 id="方法三-逻辑关系暗示" tabindex="-1"><a class="header-anchor" href="#方法三-逻辑关系暗示"><span>方法三：逻辑关系暗示</span></a></h3><p>转折：Yet, however,</p><p>因果：consequently</p><p>先原因后结果</p>',11)]))}const c=t(r,[["render",p]]),d=JSON.parse(`{"path":"/standardized/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/5.%20%E5%8F%A5%E5%AD%90%E6%8F%92%E5%85%A5%E9%A2%98.html","title":"句子插入题","lang":"en-US","frontmatter":{"description":"句子插入题 方式一：指代暗示 如果待插入句里面有these, this, They, it等代词，看指代内容是谁，那前一句一定有对应的成分 对应的方法，同指代题一样，只是反过来应用 方式二：段落结构暗示 概述->细节 概述永远放在细节前，细节永远在概述之后 方法三：逻辑关系暗示 转折：Yet, however, 因果：consequently 先原因后结果","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"句子插入题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-18T02:00:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aubrey\\",\\"url\\":\\"https://github.com/aubreykuang\\"}]}"],["meta",{"property":"og:url","content":"https://aubreykuang.github.io/blog/blog/standardized/TOEFL/READING/%E9%A2%98%E5%9E%8B%E5%88%86%E7%B1%BB/5.%20%E5%8F%A5%E5%AD%90%E6%8F%92%E5%85%A5%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Aubrey's Blog"}],["meta",{"property":"og:title","content":"句子插入题"}],["meta",{"property":"og:description","content":"句子插入题 方式一：指代暗示 如果待插入句里面有these, this, They, it等代词，看指代内容是谁，那前一句一定有对应的成分 对应的方法，同指代题一样，只是反过来应用 方式二：段落结构暗示 概述->细节 概述永远放在细节前，细节永远在概述之后 方法三：逻辑关系暗示 转折：Yet, however, 因果：consequently 先原因后结果"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-08-18T02:00:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-18T02:00:07.000Z"}]]},"git":{"createdTime":1671248160000,"updatedTime":1755482407000,"contributors":[{"name":"KoryKL","username":"KoryKL","email":"1274994508@qq.com","commits":1,"url":"https://github.com/KoryKL"},{"name":"kory","username":"kory","email":"apple@kuangyongbeideMacBook-Air.local","commits":1,"url":"https://github.com/kory"}]},"readingTime":{"minutes":0.39,"words":118},"filePathRelative":"standardized/TOEFL/READING/题型分类/5. 句子插入题.md","excerpt":"\\n<h3>方式一：指代暗示</h3>\\n<p>如果待插入句里面有these, this, They, it等代词，看指代内容是谁，那前一句一定有对应的成分</p>\\n<p>对应的方法，同指代题一样，只是反过来应用</p>\\n<h3>方式二：段落结构暗示</h3>\\n<p>概述-&gt;细节</p>\\n<p>概述永远放在细节前，细节永远在概述之后</p>\\n<h3>方法三：逻辑关系暗示</h3>\\n<p>转折：Yet, however,</p>\\n<p>因果：consequently</p>\\n<p>先原因后结果</p>\\n","autoDesc":true}`);export{c as comp,d as data};
