const n=JSON.parse(`{"key":"v-51b58d5b","path":"/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E9%93%BE%E8%A1%A8/2.%E9%80%92%E5%BD%92.html","title":"递归与反转单链表","lang":"en-US","frontmatter":{"description":"递归与反转单链表 反转整个链表 ListNode reverse(ListNode head){ if (head == null || head.next == null) return head; ListNode last = reverse(head.next); head.next.next = head head.next = null; return last; }","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E9%93%BE%E8%A1%A8/2.%E9%80%92%E5%BD%92.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:title","content":"递归与反转单链表"}],["meta",{"property":"og:description","content":"递归与反转单链表 反转整个链表 ListNode reverse(ListNode head){ if (head == null || head.next == null) return head; ListNode last = reverse(head.next); head.next.next = head head.next = null; return last; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-06T04:35:58.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-06T04:35:58.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/algo/%F0%9F%93%93%20%E6%80%BB%E7%BB%93/%F0%9F%93%92%20%E9%93%BE%E8%A1%A8/2.%E9%80%92%E5%BD%92.html"}]]},"headers":[{"level":3,"title":"反转整个链表","slug":"反转整个链表","link":"#反转整个链表","children":[]}],"git":{"createdTime":1672979758000,"updatedTime":1672979758000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":1}]},"readingTime":{"minutes":0.12,"words":36},"localizedDate":"January 6, 2023","filePathRelative":"algo/📓 总结/📒 链表/2.递归.md","excerpt":"<h1> 递归与反转单链表</h1>\\n<h3> 反转整个链表</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">ListNode</span> <span class=\\"token function\\">reverse</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ListNode</span> head<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>head <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> head<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> head<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token class-name\\">ListNode</span> last <span class=\\"token operator\\">=</span> <span class=\\"token function\\">reverse</span><span class=\\"token punctuation\\">(</span>head<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  head<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> head\\n  head<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> last<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
