import{_ as a,V as n,W as s,a0 as e}from"./framework-91a010c2.js";const t={},i=e(`<h1 id="java客户端" tabindex="-1"><a class="header-anchor" href="#java客户端" aria-hidden="true">#</a> Java客户端</h1><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>redis<span class="token punctuation">.</span>clients<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jedis<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.7</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jedis" tabindex="-1"><a class="header-anchor" href="#jedis" aria-hidden="true">#</a> Jedis</h3><h3 id="springdataredis" tabindex="-1"><a class="header-anchor" href="#springdataredis" aria-hidden="true">#</a> SpringDataRedis</h3><p>本身线程不安全，并且频繁创建和销毁连接会有性能损耗</p><p>所以用连接池替代直接连接</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230113173414066.png" alt="image-20230113173414066" loading="lazy"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230113174159672.png" alt="image-20230113174159672" loading="lazy"></p><h4 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h4><ol><li>依赖</li><li>配置文件</li><li>注入Redis Template</li><li>编写测试</li></ol><h4 id="序列化方式" tabindex="-1"><a class="header-anchor" href="#序列化方式" aria-hidden="true">#</a> 序列化方式</h4><p>可以接收任意 Object 作为值写入 Redis</p><p>写入前序列化为字节形式，默认采用JDK序列化</p><h5 id="方案一" tabindex="-1"><a class="header-anchor" href="#方案一" aria-hidden="true">#</a> 方案一</h5><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230115103541533.png" alt="image-20230115103541533" loading="lazy"></p><p>但是</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230113212425630.png" alt="image-20230113212425630" loading="lazy"></p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230113212439587.png" alt="image-20230113212439587" style="zoom:33%;"><h5 id="方案二" tabindex="-1"><a class="header-anchor" href="#方案二" aria-hidden="true">#</a> 方案二</h5><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230115103551858.png" alt="image-20230115103551858" loading="lazy"></p>`,21),p=[i];function c(o,r){return n(),s("div",null,p)}const d=a(t,[["render",c],["__file","3.Java客户端.html.vue"]]);export{d as default};
