const e=JSON.parse(`{"key":"v-2e85beb9","path":"/cs/database/redis/3%20%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1.html","title":"","lang":"en-US","frontmatter":{"description":"Redis缓存设计 都与与过期有关 缓存雪崩 为了保证缓存中的数据与数据库中的数据一致性，会给 Redis 里的数据设置过期时间，当缓存数据过期后，用户访问的数据如果不在缓存里，业务系统需要重新生成缓存，因此就会访问数据库，并将数据更新到 Redis 里，这样后续请求都可以直接命中缓存。 那么，当大量缓存数据在同一时间过期（失效）**时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库，从而导致数据库的压力骤增，严重的会造成数据库宕机，从而形成一系列连锁反应，造成整个系统崩溃，这就是**缓存雪崩的问题。","head":[["meta",{"property":"og:url","content":"https://korykl.github.io/blog/blog/cs/database/redis/3%20%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"Kory's Blog"}],["meta",{"property":"og:description","content":"Redis缓存设计 都与与过期有关 缓存雪崩 为了保证缓存中的数据与数据库中的数据一致性，会给 Redis 里的数据设置过期时间，当缓存数据过期后，用户访问的数据如果不在缓存里，业务系统需要重新生成缓存，因此就会访问数据库，并将数据更新到 Redis 里，这样后续请求都可以直接命中缓存。 那么，当大量缓存数据在同一时间过期（失效）**时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库，从而导致数据库的压力骤增，严重的会造成数据库宕机，从而形成一系列连锁反应，造成整个系统崩溃，这就是**缓存雪崩的问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-04-26T09:43:18.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-04-26T09:43:18.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://korykl.github.io/blog/blog/zh/cs/database/redis/3%20%E7%BC%93%E5%AD%98%E8%AE%BE%E8%AE%A1.html"}]]},"headers":[{"level":2,"title":"Redis缓存设计","slug":"redis缓存设计","link":"#redis缓存设计","children":[{"level":3,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[]},{"level":3,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[]},{"level":3,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]},{"level":3,"title":"缓存更新策略","slug":"缓存更新策略","link":"#缓存更新策略","children":[]}]}],"git":{"createdTime":1682502198000,"updatedTime":1682502198000,"contributors":[{"name":"KoryKL","email":"1274994508@qq.com","commits":1}]},"readingTime":{"minutes":7.72,"words":2316},"localizedDate":"April 26, 2023","filePathRelative":"cs/database/redis/3 缓存设计.md","excerpt":"<h2> Redis缓存设计</h2>\\n<p>都与与过期有关</p>\\n<h3> 缓存雪崩</h3>\\n<p>为了保证缓存中的数据与数据库中的数据一致性，会给 Redis 里的数据设置过期时间，当缓存数据过期后，用户访问的数据如果不在缓存里，业务系统需要重新生成缓存，因此就会访问数据库，并将数据更新到 Redis 里，这样后续请求都可以直接命中缓存。</p>\\n<p>那么，当<strong>大量缓存数据在同一时间过期（失效）**时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库，从而导致数据库的压力骤增，严重的会造成数据库宕机，从而形成一系列连锁反应，造成整个系统崩溃，这就是**缓存雪崩</strong>的问题。</p>","autoDesc":true}`);export{e as data};
