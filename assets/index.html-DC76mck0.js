import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as s}from"./app-CA3Si4S1.js";const n={};function o(r,t){return s(),a("div",null,t[0]||(t[0]=[e("h1",{id:"redis-java-客户端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#redis-java-客户端"},[e("span",null,"Redis Java 客户端")])],-1),e("p",null,"Jedis",-1),e("p",null,"以Redis命令作为方法名称，学习成本低，简单实用。但是Jedis实例是线程不安全的，多线程环境下需要基于连接池来使用",-1),e("p",null,"lettuce",-1),e("p",null,"基于Netty实现的，支持同步、异步和响应式编程方式，并且是线程安全的。支持Redis的哨兵模式、集群模式和管道模式，Spring官方默认的",-1),e("p",null,"Redisson",-1),e("p",null,"基于Redis实现的分布式、可伸缩的Java数据结构集合。包含了诸如Map、Queue、Lock、Semaphore、AtomicLong等强大功能",-1),e("p",null,"Spring Data Redis，封装一层，底层可以选择使用Jedis或Lettuce",-1)]))}const c=i(n,[["render",o]]),l=JSON.parse(`{"path":"/cs/database/redis/clients/","title":"Redis Java 客户端","lang":"en-US","frontmatter":{"description":"Redis Java 客户端 Jedis 以Redis命令作为方法名称，学习成本低，简单实用。但是Jedis实例是线程不安全的，多线程环境下需要基于连接池来使用 lettuce 基于Netty实现的，支持同步、异步和响应式编程方式，并且是线程安全的。支持Redis的哨兵模式、集群模式和管道模式，Spring官方默认的 Redisson 基于Redis实...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis Java 客户端\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-17T03:36:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aubrey\\",\\"url\\":\\"https://github.com/aubreykuang\\"}]}"],["meta",{"property":"og:url","content":"https://aubreykuang.github.io/blog/blog/cs/database/redis/clients/"}],["meta",{"property":"og:site_name","content":"Aubrey's Blog"}],["meta",{"property":"og:title","content":"Redis Java 客户端"}],["meta",{"property":"og:description","content":"Redis Java 客户端 Jedis 以Redis命令作为方法名称，学习成本低，简单实用。但是Jedis实例是线程不安全的，多线程环境下需要基于连接池来使用 lettuce 基于Netty实现的，支持同步、异步和响应式编程方式，并且是线程安全的。支持Redis的哨兵模式、集群模式和管道模式，Spring官方默认的 Redisson 基于Redis实..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2022-12-17T03:36:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-17T03:36:00.000Z"}]]},"git":{"createdTime":1671248160000,"updatedTime":1671248160000,"contributors":[{"name":"KoryKL","username":"KoryKL","email":"1274994508@qq.com","commits":1,"url":"https://github.com/KoryKL"}]},"readingTime":{"minutes":0.53,"words":159},"filePathRelative":"cs/database/redis/clients/README.md","excerpt":"\\n<p>Jedis</p>\\n<p>以Redis命令作为方法名称，学习成本低，简单实用。但是Jedis实例是线程不安全的，多线程环境下需要基于连接池来使用</p>\\n<p>lettuce</p>\\n<p>基于Netty实现的，支持同步、异步和响应式编程方式，并且是线程安全的。支持Redis的哨兵模式、集群模式和管道模式，Spring官方默认的</p>\\n<p>Redisson</p>\\n<p>基于Redis实现的分布式、可伸缩的Java数据结构集合。包含了诸如Map、Queue、Lock、Semaphore、AtomicLong等强大功能</p>\\n<p>Spring Data Redis，封装一层，底层可以选择使用Jedis或Lettuce</p>","autoDesc":true}`);export{c as comp,l as data};
