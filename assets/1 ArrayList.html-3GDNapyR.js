import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as r,o as s}from"./app-fVbzsCFO.js";const n={};function p(o,a){return s(),e("div",null,a[0]||(a[0]=[r('<h1 id="arraylist" tabindex="-1"><a class="header-anchor" href="#arraylist"><span>ArrayList</span></a></h1><p>无参构造，长度为0的数组</p><blockquote><p><strong>以无参数构造方法创建 <code>ArrayList</code> 时，实际上初始化赋值的是一个空数组。当真正对数组进行添加元素操作时，才真正分配容量。即向数组中添加第一个元素时，数组容量扩为 10。</strong></p></blockquote><p>如果传入集合，长度为集合大小</p><h2 id="扩容" tabindex="-1"><a class="header-anchor" href="#扩容"><span>扩容</span></a></h2><h3 id="add自动扩容" tabindex="-1"><a class="header-anchor" href="#add自动扩容"><span>Add自动扩容</span></a></h3><p>&gt;&gt; 1找到一半 + 原来的长度</p><p><strong>ArrayList 每次扩容之后容量都会变为原来的 1.5 倍左右</strong></p><h3 id="addall方法" tabindex="-1"><a class="header-anchor" href="#addall方法"><span>addAll方法</span></a></h3><p>在自动扩容、增加的长度之间选择较大值</p><h2 id="迭代器" tabindex="-1"><a class="header-anchor" href="#迭代器"><span>迭代器</span></a></h2><h3 id="failfast-failsafe" tabindex="-1"><a class="header-anchor" href="#failfast-failsafe"><span>failfast｜failsafe</span></a></h3><p>fail-fast：一旦发现遍历同时其他修改，抛出异常</p><blockquote><p>ArrayList的模式⬆️</p></blockquote><p>源码：记录了循环前后集合的<strong>修改次数</strong>，比较是否一致</p><p>fail-safe：发现时应对，为了完成遍历，例如牺牲一致性（遍历读取的数据不是最新）</p><p>源码：add方法复制原来的数组，长度+1，最新元素加到后面；读写分离</p><h2 id="和linkedlist比较" tabindex="-1"><a class="header-anchor" href="#和linkedlist比较"><span>和LinkedList比较</span></a></h2><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230202183605834.png" alt="image-20230202183605834"></p><p>因为Node存储本身数据，还有上下指针</p><h3 id="arraylist-1" tabindex="-1"><a class="header-anchor" href="#arraylist-1"><span>Arraylist</span></a></h3><p>继承 RandomAccess 随机访问</p><p>随机访问快</p><h2 id="cpu读写" tabindex="-1"><a class="header-anchor" href="#cpu读写"><span>CPU读写</span></a></h2><p>内存读写一次效率低，所以设置CPU缓存</p><p>数组：相邻数据也会读入CPU缓存区</p><p>链表：不会，因为存储空间可能不相邻</p>',27)]))}const d=t(n,[["render",p]]),h=JSON.parse(`{"path":"/se/BackEnd/%F0%9F%8C%9F%20java%E9%9B%86%E5%90%88/1%20%E5%9F%BA%E7%A1%80/1%20ArrayList.html","title":"ArrayList","lang":"en-US","frontmatter":{"description":"ArrayList 无参构造，长度为0的数组 以无参数构造方法创建 ArrayList 时，实际上初始化赋值的是一个空数组。当真正对数组进行添加元素操作时，才真正分配容量。即向数组中添加第一个元素时，数组容量扩为 10。 如果传入集合，长度为集合大小 扩容 Add自动扩容 >> 1找到一半 + 原来的长度 ArrayList 每次扩容之后容量都会变为原...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ArrayList\\",\\"image\\":[\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230202183605834.png\\"],\\"dateModified\\":\\"2023-04-06T03:21:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aubrey\\",\\"url\\":\\"https://github.com/aubreykuang\\"}]}"],["meta",{"property":"og:url","content":"https://aubreykuang.github.io/blog/blog/se/BackEnd/%F0%9F%8C%9F%20java%E9%9B%86%E5%90%88/1%20%E5%9F%BA%E7%A1%80/1%20ArrayList.html"}],["meta",{"property":"og:site_name","content":"Aubrey's Blog"}],["meta",{"property":"og:title","content":"ArrayList"}],["meta",{"property":"og:description","content":"ArrayList 无参构造，长度为0的数组 以无参数构造方法创建 ArrayList 时，实际上初始化赋值的是一个空数组。当真正对数组进行添加元素操作时，才真正分配容量。即向数组中添加第一个元素时，数组容量扩为 10。 如果传入集合，长度为集合大小 扩容 Add自动扩容 >> 1找到一半 + 原来的长度 ArrayList 每次扩容之后容量都会变为原..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20230202183605834.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-04-06T03:21:04.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-06T03:21:04.000Z"}]]},"git":{"createdTime":1675389983000,"updatedTime":1680751264000,"contributors":[{"name":"KoryKL","username":"KoryKL","email":"1274994508@qq.com","commits":3,"url":"https://github.com/KoryKL"}]},"readingTime":{"minutes":1.15,"words":346},"filePathRelative":"se/BackEnd/🌟 java集合/1 基础/1 ArrayList.md","excerpt":"\\n<p>无参构造，长度为0的数组</p>\\n<blockquote>\\n<p><strong>以无参数构造方法创建 <code>ArrayList</code> 时，实际上初始化赋值的是一个空数组。当真正对数组进行添加元素操作时，才真正分配容量。即向数组中添加第一个元素时，数组容量扩为 10。</strong></p>\\n</blockquote>\\n<p>如果传入集合，长度为集合大小</p>\\n<h2>扩容</h2>\\n<h3>Add自动扩容</h3>\\n<p>&gt;&gt; 1找到一半 + 原来的长度</p>\\n<p><strong>ArrayList 每次扩容之后容量都会变为原来的 1.5 倍左右</strong></p>","autoDesc":true}`);export{d as comp,h as data};
