import{_ as a,V as n,W as s,a0 as e}from"./framework-91a010c2.js";const t={},p=e(`<h3 id="层叠样式表" tabindex="-1"><a class="header-anchor" href="#层叠样式表" aria-hidden="true">#</a> 层叠样式表</h3><p>写在style标签中，<strong>style标签</strong>一般<strong>在head标签</strong>里【内嵌式】，<strong>title标签下面</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">p</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>p为选择器选择的标签</strong>，{}为css属性，color为属性名，red为属性值</p><p>属性：font-size 字号 单位 px</p><p>​ bgc 背景颜色</p><p>​ width 宽度</p><p>​ height</p><h4 id="每一个属性写完后-需要写分号" tabindex="-1"><a class="header-anchor" href="#每一个属性写完后-需要写分号" aria-hidden="true">#</a> 每一个属性写完后，需要写分号</h4><p>【外联式】CSS写在一个单独的.css文件中，需要通过link标签在网页中引入</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>【行内式】写在标签的style属性中，配合js使用</p><h3 id="标签选择器" tabindex="-1"><a class="header-anchor" href="#标签选择器" aria-hidden="true">#</a> 标签选择器</h3><p>选择对应的某一类标签，后续设置样式</p><p>所有标签上都有class属性，称为类名</p><h3 id="类选择器" tabindex="-1"><a class="header-anchor" href="#类选择器" aria-hidden="true">#</a> 类选择器</h3><h3 id="格式-类名" tabindex="-1"><a class="header-anchor" href="#格式-类名" aria-hidden="true">#</a> 格式： .类名{}</h3><p>类名可以重复，一个标签可以同时有多个类名，用空格隔开</p><p>一个类选择器可以同时选中多个标签</p><h5 id="类不能以数字或中划线开头" tabindex="-1"><a class="header-anchor" href="#类不能以数字或中划线开头" aria-hidden="true">#</a> 类不能以数字或中划线开头</h5><h4 id="最常用" tabindex="-1"><a class="header-anchor" href="#最常用" aria-hidden="true">#</a> 最常用</h4><h3 id="id选择器" tabindex="-1"><a class="header-anchor" href="#id选择器" aria-hidden="true">#</a> id选择器</h3><h3 id="格式-id属性值" tabindex="-1"><a class="header-anchor" href="#格式-id属性值" aria-hidden="true">#</a> 格式：#id属性值</h3><p>所有标签上都有id属性</p><p>类似身份证号码，唯一，不可重复</p><p>一个标签上只能有一个id属性</p><p>一个id选择器只能选中一个标签</p><h4 id="一般配合js使用-除非特殊情况否则不要用" tabindex="-1"><a class="header-anchor" href="#一般配合js使用-除非特殊情况否则不要用" aria-hidden="true">#</a> 一般配合js使用，除非特殊情况否则不要用</h4><h3 id="通配符选择器" tabindex="-1"><a class="header-anchor" href="#通配符选择器" aria-hidden="true">#</a> 通配符选择器</h3><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> *{}</h2><h2 id="极少用" tabindex="-1"><a class="header-anchor" href="#极少用" aria-hidden="true">#</a> 极少用</h2><h2 id="字体和文本样式" tabindex="-1"><a class="header-anchor" href="#字体和文本样式" aria-hidden="true">#</a> 字体和文本样式</h2><p>属性名大小 font-size</p><p>数字+px（需要设置单位，否则无效）</p><p>粗细 font-weight</p><p>关键字/纯数字（纯数字：font-weight：）</p><p>（不是所有字体都提供了九种粗细）</p><p>样式 font-style</p><p>正常：normal</p><p>斜体：italic</p><p>字体： font-family</p><p>sans-serif 字体系列名（无衬线字体）</p>`,42),i=[p];function r(d,c){return n(),s("div",null,i)}const h=a(t,[["render",r],["__file","CSS.html.vue"]]);export{h as default};
