import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as t}from"./app-fVbzsCFO.js";const r={};function o(i,a){return t(),n("div",null,a[0]||(a[0]=[e('<h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h1><p>用来存储相同类型的数据</p><h5 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h5><p><code>int [] arr;</code>定义一个int类型的数组，名字叫arr</p><p><code>int arr[];</code></p><p>长度确定，一旦创建，大小就不能改变</p><p>数组变量属于引用类型，数组也是对象、存储在堆中</p><p><strong>创建</strong></p><p><code>arr = new int[4];</code></p><p>开辟了长度为4的空间</p><h5 id="⚠️声明和创建可以合并" tabindex="-1"><a class="header-anchor" href="#⚠️声明和创建可以合并"><span>⚠️声明和创建可以合并：</span></a></h5><p><code>int[] arr = new int[4];</code></p><p><strong>赋值</strong></p><p>根据索引赋值</p><p><code>arr[0] = 1;</code></p><p>注意越界问题</p><p><strong>使用</strong></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712115245881.png" alt="image-20220712115245881"></p><p>单纯增强for循环，不能涉及索引相关的操作</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712114841677.png" alt="image-20220712114841677"></p><p>for循环不要太多，可以学习重复利用的思想</p><h5 id="初始化方式" tabindex="-1"><a class="header-anchor" href="#初始化方式"><span>初始化方式</span></a></h5><p>动态初始化：分配空间和赋值分开（上面</p><p>静态初始化：<code>int[]arr = {1,2,3,4};</code></p><p>[]里面不能写东西</p><p>必须是连等，不能分开arr = {1,2,3}</p><p>默认初始化：</p><h4 id="应用" tabindex="-1"><a class="header-anchor" href="#应用"><span>应用</span></a></h4><p>最值问题</p><p>形参传给实参的时候：</p><p>基本数据类型传字面值，如果是引用数据类型，穿的是地址值</p><p>查询问题</p><p>查找下标：只要找到，就停止循环 <code>break</code></p><p>设置index初始值的tips：设成-1</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712161843461.png" alt="image-20220712161843461"></p><p>添加元素</p><p>数组长度一旦设定，不能改</p><p>所以最后一个数会被挤掉</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712162918599.png" alt="image-20220712162918599"></p><p>（在2的位置上，添加91）</p><p>删除元素</p><h4 id="main方法" tabindex="-1"><a class="header-anchor" href="#main方法"><span>main方法</span></a></h4><p>程序的入口，如果类中有多个方法，虚拟机会识别main方法作为程序入口</p><p>public static 修饰符</p><p>void 方法没有返回值</p><p>main方法名</p><p>String[]args形参</p><blockquote><p>默认情况：调用main方法的时候，传入长度为0的string</p></blockquote><h5 id="可变参数-jdk1-5后的新特性" tabindex="-1"><a class="header-anchor" href="#可变参数-jdk1-5后的新特性"><span>可变参数（jdk1.5后的新特性</span></a></h5><p>提供一个方法，参数的个数可变</p><p><code>method(int...num)</code></p><p>解决了部分方法的重载问题</p><p>方法的内部对<strong>可变参数</strong>的处理和<strong>数组</strong>一样</p><p>可变参数和其他数据一起作为形参时，可变参数一定要放后面</p><h4 id="arrays" tabindex="-1"><a class="header-anchor" href="#arrays"><span>Arrays</span></a></h4><p>一个便于处理数组的类</p><ol><li>对数组遍历查看，返回字符串<code>Arrays.toString(arr)</code></li><li>找某个元素对应的索引【一定是有序数组，才能使用】<code>Array.binarySearch(arr,4)</code></li></ol><p>​ 在arr中找元素4的索引</p><ol start="3"><li>排序<code>Arrays.sort()</code>升序</li><li>复制产生新数组<code>Arrays.copyOf(arr,4)</code></li></ol><p>​ 从arr里复制长度为4的新数组</p><ol start="5"><li><code>Arrays.copyOfRange(arr,1,4)</code>区间复制</li><li>区间嫁接<code>System.arraycopy(arr1,x,arr2,y,length)</code></li></ol><h4 id="二维数组" tabindex="-1"><a class="header-anchor" href="#二维数组"><span>二维数组</span></a></h4><p>数组里面套数组</p><h5 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h5><p><code>int[][] arr = new int[3][];</code></p><p>实际上是定义了一个长度为3的一维数组</p><p>然后赋值</p><p><code>int [] a1 = {1,2,3};</code></p><p><code>arr[0] = a1;</code></p><p>或者</p><p><code>arr[1] = new int[]{4,5,6,7};</code></p><h5 id="遍历" tabindex="-1"><a class="header-anchor" href="#遍历"><span>遍历</span></a></h5><p>双重循环</p><p>方法1</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220713134616304.png" alt="image-20220713134616304"></p><p>方法2</p><p>内层增强for</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220713134732652.png" alt="image-20220713134732652"></p><p>方法3</p><p>内外层都增强</p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220713134815036.png" alt="image-20220713134815036"></p><h5 id="初始化-也是三种" tabindex="-1"><a class="header-anchor" href="#初始化-也是三种"><span>初始化，也是三种</span></a></h5>',82)]))}const h=p(r,[["render",o]]),g=JSON.parse(`{"path":"/se/BackEnd/JavaSE/6%20%E6%95%B0%E7%BB%84.html","title":"数组","lang":"en-US","frontmatter":{"description":"数组 用来存储相同类型的数据 声明 int [] arr;定义一个int类型的数组，名字叫arr int arr[]; 长度确定，一旦创建，大小就不能改变 数组变量属于引用类型，数组也是对象、存储在堆中 创建 arr = new int[4]; 开辟了长度为4的空间 ⚠️声明和创建可以合并： int[] arr = new int[4]; 赋值 根据索...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组\\",\\"image\\":[\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712115245881.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712114841677.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712161843461.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712162918599.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220713134616304.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220713134732652.png\\",\\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220713134815036.png\\"],\\"dateModified\\":\\"2023-01-10T04:40:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aubrey\\",\\"url\\":\\"https://github.com/aubreykuang\\"}]}"],["meta",{"property":"og:url","content":"https://aubreykuang.github.io/blog/blog/se/BackEnd/JavaSE/6%20%E6%95%B0%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"Aubrey's Blog"}],["meta",{"property":"og:title","content":"数组"}],["meta",{"property":"og:description","content":"数组 用来存储相同类型的数据 声明 int [] arr;定义一个int类型的数组，名字叫arr int arr[]; 长度确定，一旦创建，大小就不能改变 数组变量属于引用类型，数组也是对象、存储在堆中 创建 arr = new int[4]; 开辟了长度为4的空间 ⚠️声明和创建可以合并： int[] arr = new int[4]; 赋值 根据索..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/3978/image-20220712115245881.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-01-10T04:40:48.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-10T04:40:48.000Z"}]]},"git":{"createdTime":1673324155000,"updatedTime":1673325648000,"contributors":[{"name":"KoryKL","username":"KoryKL","email":"1274994508@qq.com","commits":2,"url":"https://github.com/KoryKL"}]},"readingTime":{"minutes":2.44,"words":731},"filePathRelative":"se/BackEnd/JavaSE/6 数组.md","excerpt":"\\n<p>用来存储相同类型的数据</p>\\n<h5>声明</h5>\\n<p><code>int [] arr;</code>定义一个int类型的数组，名字叫arr</p>\\n<p><code>int arr[];</code></p>\\n<p>长度确定，一旦创建，大小就不能改变</p>\\n<p>数组变量属于引用类型，数组也是对象、存储在堆中</p>\\n<p><strong>创建</strong></p>\\n<p><code>arr = new int[4];</code></p>\\n<p>开辟了长度为4的空间</p>\\n<h5>⚠️声明和创建可以合并：</h5>\\n<p><code>int[] arr = new int[4];</code></p>","autoDesc":true}`);export{h as comp,g as data};
